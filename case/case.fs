( CHECK SYNTAX FLAGS MATCH )
: ?PAIRS ( N N -- )
  = 0= ( ARE THEY NOT EQUAL )
  IF
    ." ERROR 5" CR ABORT
  THEN
;

0 COMPILER CASE
  0 ( USED BY ENDCASE TO CHECK DONE )
  9 ( SYNTAX GUIDE )
RUNS>
  DROP ( DROP ADDR OF PARAMETER FIELD )
;

2 COMPILER OF
  9 ?PAIRS ( CHECK PRECEDED BY CASE OR ENDOF )
  HERE ( SAVE CURRENT ADDR FOR ENDOF )
  0 , ( RESERVE TWO BYTES IN DICTIONARY )
  7 ( SYNTAX GUIDE )
RUNS>
  >R ( SAVE PARAMETER-FIELD ADDR )
  OVER = ( CHECK FOR MATCH, PRESERVING COPY OF INPUT )
  R> ( RECOVER PARAMETER-FIELD ADDR )
  SWAP ( BRING FLAG TO TOP )
  IF ( INDICATES MATCH ) 
    DROP DROP ( DROP PARAMETER-FIELD ADDR AND INPUT, AS DONE )
  ELSE
    @ ( RETRIEVE OFFSET FROM PARAMETER FIELD )
    R> + >R ( ADVANCE TO NEXT 'OF' STATEMENT )
  THEN
;

2 COMPILER ENDOF
  7 ?PAIRS ( CHECK PRECEDED BY OF )
  HERE ( PUT END-OF-DICTIONARY ON STACK )
  SWAP ( SWAP WITH ENDO-OF-DICTIONARY FROM OF )
  0 , ( RESERVE TWO BYTES IN DICTIONARY )
  OVER OVER - ( WORK OUT OFFSET )
  SWAP ! ( STORE IN PARAMETER FIELD OF 'OF' )
  9 ( SYNTAX GUIDE )
RUNS>
  @ ( RETRIEVE OFFSET TO END CASE )
  R> + 4- >R ( APPLY TO RETURN ADDRESS, WITH 4-BYTE CORRECTION )
;

0 COMPILER OTHERWISE
  9 ?PAIRS ( CHECK PRECEDED BY CASE OR ENDOF )
  8 ( SYNTAX GUIDE )
RUNS>
  DROP DROP ( DROP PARAMETER-FIELD ADDR AND INPUT, AS DONE )
;

0 COMPILER ENDCASE
  8 ?PAIRS ( CHECK PRECEDED BY OTHERWISE )
  BEGIN
    ?DUP ( IF PARAMETER-FIELD ADDRESS NON-ZERO, DUPLICATE )
  WHILE 
    HERE OVER - ( WORK OUT OFFSET )
    SWAP ! ( STORE IN PARAMETER FIELD OF 'ENDOF' )
  REPEAT ( DO FOR EACH 'ENDOF' )
RUNS>
  DROP ( DROP PARAMETER FIELD, AS DONE )
;

: TEST
  CASE
    1 OF ." ONE" ENDOF CR
    2 OF ." TWO" ENDOF CR
    OTHERWISE ." NOT KNOWN" CR
  ENDCASE
;
